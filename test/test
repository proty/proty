#!/usr/bin/env python

"""
This script runs all test files in the test directory and converts
their outputs to a junit compatible xml format.
"""

import subprocess
import os, sys
import fnmatch
from datetime import datetime
import time
from xml.dom.minidom import Document

dir = sys.argv[1]

doc = Document()
suites = doc.createElement("testsuites")

id = 0
for file in os.listdir(dir):
    if fnmatch.fnmatch(file, "*.pr"):
        id += 1

        tests = 0
        failures = 0
        suitename = "proty." + file.split(".pr")[0]

        suite = doc.createElement("testsuite")
        suite.setAttribute("id", str(id))
        suite.setAttribute("package", "proty")
        suite.setAttribute("name", suitename)
        suite.setAttribute("hostname", "prsys")
        suite.setAttribute("timestamp", time.strftime("%Y-%m-%dT%H:%M:%S"))

        start = time.time()

        proc = subprocess.Popen(["./proty", os.path.join(dir, file)],
                                stdout=subprocess.PIPE)

        for line in proc.stdout:
            testcase = doc.createElement("testcase")

            line = line.rstrip().decode("utf-8")
            name, successCount, failureCount = line.split(";")

            tests += int(successCount) + int(failureCount)
            failures += int(failureCount)

            testcase.setAttribute("name", name)
            testcase.setAttribute("classname", suitename)
            testcase.setAttribute("time", "0.0")
            suite.appendChild(testcase)

        elapsed = (time.time() - start)
        suite.setAttribute("time", "%.4f" % elapsed)
        suite.setAttribute("tests", str(tests))
        suite.setAttribute("failures", str(failures))
        suite.setAttribute("errors", "0")
        suites.appendChild(suite)

doc.appendChild(suites)
print(doc.toprettyxml(indent="  "))
